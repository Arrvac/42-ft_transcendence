version: '3.3'
services:
    main:
        container_name: main
        build:
            context: .
            dockerfile: ./dockerfile_backend
        volumes:
            - ./Back-end/.:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - 3000:3000
        command: npm run start:dev
        env_file:
            - ./Back-end/.env
        networks:
            - webnet
        depends_on:
            - redis
            - postgres
    redis:
        container_name: redis
        image: redis:5
        networks:
            - webnet
    postgres:
        container_name: postgres
        image: postgres:12
        networks:
            - webnet
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DATABASE}
            PG_DATA: /var/lib/postgresql/data
        ports:
            - 5432:5432
        volumes:
            - pgdata:/var/lib/postgresql/data
    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
             - pgadmin:/root/.pgadmin
        ports:
            - "5050:80"
        networks:
            - webnet
        restart: unless-stopped
    frontend:
        container_name: frontend
        build:
            context: .
            dockerfile: ./dockerfile_frontend
        restart: always
        ports:
            - 8080:8080
        #command: npm run serve
        env_file:
            - .env
        networks:
            - webnet
        depends_on:
            - main

networks:
    webnet:
volumes:
    pgdata:
    pgadmin: